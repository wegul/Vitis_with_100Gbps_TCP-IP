// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rocev2_top_merge_rx_pkgs_64_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        rx_rethSift2mergerFifo_dout,
        rx_rethSift2mergerFifo_num_data_valid,
        rx_rethSift2mergerFifo_fifo_cap,
        rx_rethSift2mergerFifo_empty_n,
        rx_rethSift2mergerFifo_read,
        rx_aethSift2mergerFifo_dout,
        rx_aethSift2mergerFifo_num_data_valid,
        rx_aethSift2mergerFifo_fifo_cap,
        rx_aethSift2mergerFifo_empty_n,
        rx_aethSift2mergerFifo_read,
        rx_exhNoShiftFifo_dout,
        rx_exhNoShiftFifo_num_data_valid,
        rx_exhNoShiftFifo_fifo_cap,
        rx_exhNoShiftFifo_empty_n,
        rx_exhNoShiftFifo_read,
        rx_pkgShiftTypeFifo_dout,
        rx_pkgShiftTypeFifo_num_data_valid,
        rx_pkgShiftTypeFifo_fifo_cap,
        rx_pkgShiftTypeFifo_empty_n,
        rx_pkgShiftTypeFifo_read,
        m_axis_mem_write_data_TREADY,
        m_axis_mem_write_data_TDATA,
        m_axis_mem_write_data_TVALID
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [127:0] rx_rethSift2mergerFifo_dout;
input  [2:0] rx_rethSift2mergerFifo_num_data_valid;
input  [2:0] rx_rethSift2mergerFifo_fifo_cap;
input   rx_rethSift2mergerFifo_empty_n;
output   rx_rethSift2mergerFifo_read;
input  [127:0] rx_aethSift2mergerFifo_dout;
input  [2:0] rx_aethSift2mergerFifo_num_data_valid;
input  [2:0] rx_aethSift2mergerFifo_fifo_cap;
input   rx_aethSift2mergerFifo_empty_n;
output   rx_aethSift2mergerFifo_read;
input  [127:0] rx_exhNoShiftFifo_dout;
input  [2:0] rx_exhNoShiftFifo_num_data_valid;
input  [2:0] rx_exhNoShiftFifo_fifo_cap;
input   rx_exhNoShiftFifo_empty_n;
output   rx_exhNoShiftFifo_read;
input  [31:0] rx_pkgShiftTypeFifo_dout;
input  [1:0] rx_pkgShiftTypeFifo_num_data_valid;
input  [1:0] rx_pkgShiftTypeFifo_fifo_cap;
input   rx_pkgShiftTypeFifo_empty_n;
output   rx_pkgShiftTypeFifo_read;
input   m_axis_mem_write_data_TREADY;
output  [127:0] m_axis_mem_write_data_TDATA;
output   m_axis_mem_write_data_TVALID;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rx_rethSift2mergerFifo_read;
reg rx_aethSift2mergerFifo_read;
reg rx_exhNoShiftFifo_read;
reg rx_pkgShiftTypeFifo_read;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire   [0:0] tmp_157_i_nbreadreq_fu_52_p3;
reg    ap_predicate_op26_read_state1;
wire   [0:0] tmp_i_256_nbreadreq_fu_66_p3;
reg    ap_predicate_op35_read_state1;
wire   [0:0] tmp_156_i_nbreadreq_fu_80_p3;
reg    ap_predicate_op45_read_state1;
wire   [0:0] tmp_i_nbreadreq_fu_94_p3;
reg    ap_predicate_op54_read_state1;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [1:0] state_3_load_reg_209;
reg   [0:0] tmp_157_i_reg_213;
reg    ap_predicate_op63_write_state2;
reg   [0:0] tmp_i_256_reg_225;
reg    ap_predicate_op65_write_state2;
reg   [0:0] tmp_156_i_reg_237;
reg    ap_predicate_op66_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
reg   [1:0] state_3_load_reg_209_pp0_iter1_reg;
reg   [0:0] tmp_157_i_reg_213_pp0_iter1_reg;
reg    ap_predicate_op67_write_state3;
reg   [0:0] tmp_i_256_reg_225_pp0_iter1_reg;
reg    ap_predicate_op68_write_state3;
reg   [0:0] tmp_156_i_reg_237_pp0_iter1_reg;
reg    ap_predicate_op69_write_state3;
wire    regslice_both_m_axis_mem_write_data_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_subdone;
reg   [1:0] state_3;
reg    m_axis_mem_write_data_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    rx_pkgShiftTypeFifo_blk_n;
reg    rx_aethSift2mergerFifo_blk_n;
reg    rx_rethSift2mergerFifo_blk_n;
reg    rx_exhNoShiftFifo_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [127:0] rx_rethSift2mergerFifo_read_reg_217;
wire   [72:0] trunc_ln2067_fu_141_p1;
reg   [72:0] trunc_ln2067_reg_232;
reg   [127:0] rx_exhNoShiftFifo_read_reg_241;
wire   [127:0] zext_ln2067_fu_205_p1;
wire   [1:0] select_ln2048_1_fu_191_p3;
wire   [0:0] currWord_last_V_16_fu_119_p3;
wire   [0:0] currWord_last_V_15_fu_133_p3;
wire   [0:0] currWord_last_V_fu_151_p3;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln2048_1_fu_171_p2;
wire   [0:0] icmp_ln2048_fu_165_p2;
wire   [0:0] or_ln2048_fu_185_p2;
wire   [1:0] select_ln2048_fu_177_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg   [127:0] m_axis_mem_write_data_TDATA_int_regslice;
reg    m_axis_mem_write_data_TVALID_int_regslice;
wire    m_axis_mem_write_data_TREADY_int_regslice;
wire    regslice_both_m_axis_mem_write_data_U_vld_out;
reg    ap_condition_277;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 state_3 = 2'd0;
end

rocev2_top_regslice_both #(
    .DataWidth( 128 ))
regslice_both_m_axis_mem_write_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(m_axis_mem_write_data_TDATA_int_regslice),
    .vld_in(m_axis_mem_write_data_TVALID_int_regslice),
    .ack_in(m_axis_mem_write_data_TREADY_int_regslice),
    .data_out(m_axis_mem_write_data_TDATA),
    .vld_out(regslice_both_m_axis_mem_write_data_U_vld_out),
    .ack_out(m_axis_mem_write_data_TREADY),
    .apdone_blk(regslice_both_m_axis_mem_write_data_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_nbreadreq_fu_94_p3 == 1'd1) & (state_3 == 2'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        state_3 <= select_ln2048_1_fu_191_p3;
    end else if ((((tmp_156_i_nbreadreq_fu_80_p3 == 1'd1) & (state_3 == 2'd3) & (currWord_last_V_fu_151_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_i_256_nbreadreq_fu_66_p3 == 1'd1) & (state_3 == 2'd1) & (currWord_last_V_15_fu_133_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((tmp_157_i_nbreadreq_fu_52_p3 == 1'd1) & (state_3 == 2'd2) & (currWord_last_V_16_fu_119_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        state_3 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op45_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_exhNoShiftFifo_read_reg_241 <= rx_exhNoShiftFifo_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op26_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_rethSift2mergerFifo_read_reg_217 <= rx_rethSift2mergerFifo_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        state_3_load_reg_209 <= state_3;
        state_3_load_reg_209_pp0_iter1_reg <= state_3_load_reg_209;
        tmp_156_i_reg_237_pp0_iter1_reg <= tmp_156_i_reg_237;
        tmp_157_i_reg_213_pp0_iter1_reg <= tmp_157_i_reg_213;
        tmp_i_256_reg_225_pp0_iter1_reg <= tmp_i_256_reg_225;
    end
end

always @ (posedge ap_clk) begin
    if (((state_3 == 2'd3) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_156_i_reg_237 <= tmp_156_i_nbreadreq_fu_80_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((state_3 == 2'd2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_157_i_reg_213 <= tmp_157_i_nbreadreq_fu_52_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((state_3 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_i_256_reg_225 <= tmp_i_256_nbreadreq_fu_66_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_256_nbreadreq_fu_66_p3 == 1'd1) & (state_3 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln2067_reg_232 <= trunc_ln2067_fu_141_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op69_write_state3 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op68_write_state3 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op67_write_state3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op66_write_state2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op65_write_state2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op63_write_state2 == 1'b1)))) begin
        m_axis_mem_write_data_TDATA_blk_n = m_axis_mem_write_data_TREADY_int_regslice;
    end else begin
        m_axis_mem_write_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_277)) begin
        if ((ap_predicate_op66_write_state2 == 1'b1)) begin
            m_axis_mem_write_data_TDATA_int_regslice = rx_exhNoShiftFifo_read_reg_241;
        end else if ((ap_predicate_op65_write_state2 == 1'b1)) begin
            m_axis_mem_write_data_TDATA_int_regslice = zext_ln2067_fu_205_p1;
        end else if ((ap_predicate_op63_write_state2 == 1'b1)) begin
            m_axis_mem_write_data_TDATA_int_regslice = rx_rethSift2mergerFifo_read_reg_217;
        end else begin
            m_axis_mem_write_data_TDATA_int_regslice = 'bx;
        end
    end else begin
        m_axis_mem_write_data_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op66_write_state2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op65_write_state2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op63_write_state2 == 1'b1)))) begin
        m_axis_mem_write_data_TVALID_int_regslice = 1'b1;
    end else begin
        m_axis_mem_write_data_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b0) & (ap_predicate_op35_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_aethSift2mergerFifo_blk_n = rx_aethSift2mergerFifo_empty_n;
    end else begin
        rx_aethSift2mergerFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op35_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_aethSift2mergerFifo_read = 1'b1;
    end else begin
        rx_aethSift2mergerFifo_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b0) & (ap_predicate_op45_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_exhNoShiftFifo_blk_n = rx_exhNoShiftFifo_empty_n;
    end else begin
        rx_exhNoShiftFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op45_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_exhNoShiftFifo_read = 1'b1;
    end else begin
        rx_exhNoShiftFifo_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b0) & (ap_predicate_op54_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_pkgShiftTypeFifo_blk_n = rx_pkgShiftTypeFifo_empty_n;
    end else begin
        rx_pkgShiftTypeFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op54_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_pkgShiftTypeFifo_read = 1'b1;
    end else begin
        rx_pkgShiftTypeFifo_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b0) & (ap_predicate_op26_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        rx_rethSift2mergerFifo_blk_n = rx_rethSift2mergerFifo_empty_n;
    end else begin
        rx_rethSift2mergerFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op26_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        rx_rethSift2mergerFifo_read = 1'b1;
    end else begin
        rx_rethSift2mergerFifo_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_m_axis_mem_write_data_U_apdone_blk == 1'b1) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op69_write_state3 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op68_write_state3 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op66_write_state2 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op65_write_state2 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op63_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op54_read_state1 == 1'b1) & (rx_pkgShiftTypeFifo_empty_n == 1'b0)) | ((ap_predicate_op45_read_state1 == 1'b1) & (rx_exhNoShiftFifo_empty_n == 1'b0)) | ((ap_predicate_op35_read_state1 == 1'b1) & (rx_aethSift2mergerFifo_empty_n == 1'b0)) | ((ap_predicate_op26_read_state1 == 1'b1) & (rx_rethSift2mergerFifo_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (regslice_both_m_axis_mem_write_data_U_apdone_blk == 1'b1) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op69_write_state3 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op68_write_state3 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op66_write_state2 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op65_write_state2 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op63_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op54_read_state1 == 1'b1) & (rx_pkgShiftTypeFifo_empty_n == 1'b0)) | ((ap_predicate_op45_read_state1 == 1'b1) & (rx_exhNoShiftFifo_empty_n == 1'b0)) | ((ap_predicate_op35_read_state1 == 1'b1) & (rx_aethSift2mergerFifo_empty_n == 1'b0)) | ((ap_predicate_op26_read_state1 == 1'b1) & (rx_rethSift2mergerFifo_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | (regslice_both_m_axis_mem_write_data_U_apdone_blk == 1'b1) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op69_write_state3 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op68_write_state3 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state2_io) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op66_write_state2 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op65_write_state2 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op63_write_state2 == 1'b1)))) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op54_read_state1 == 1'b1) & (rx_pkgShiftTypeFifo_empty_n == 1'b0)) | ((ap_predicate_op45_read_state1 == 1'b1) & (rx_exhNoShiftFifo_empty_n == 1'b0)) | ((ap_predicate_op35_read_state1 == 1'b1) & (rx_aethSift2mergerFifo_empty_n == 1'b0)) | ((ap_predicate_op26_read_state1 == 1'b1) & (rx_rethSift2mergerFifo_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | ((ap_predicate_op54_read_state1 == 1'b1) & (rx_pkgShiftTypeFifo_empty_n == 1'b0)) | ((ap_predicate_op45_read_state1 == 1'b1) & (rx_exhNoShiftFifo_empty_n == 1'b0)) | ((ap_predicate_op35_read_state1 == 1'b1) & (rx_aethSift2mergerFifo_empty_n == 1'b0)) | ((ap_predicate_op26_read_state1 == 1'b1) & (rx_rethSift2mergerFifo_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2_io = (((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op66_write_state2 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op65_write_state2 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op63_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op66_write_state2 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op65_write_state2 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op63_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_io = (((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op69_write_state3 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op68_write_state3 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((regslice_both_m_axis_mem_write_data_U_apdone_blk == 1'b1) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op69_write_state3 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op68_write_state3 == 1'b1)) | ((m_axis_mem_write_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op67_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_condition_277 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op26_read_state1 = ((tmp_157_i_nbreadreq_fu_52_p3 == 1'd1) & (state_3 == 2'd2));
end

always @ (*) begin
    ap_predicate_op35_read_state1 = ((tmp_i_256_nbreadreq_fu_66_p3 == 1'd1) & (state_3 == 2'd1));
end

always @ (*) begin
    ap_predicate_op45_read_state1 = ((tmp_156_i_nbreadreq_fu_80_p3 == 1'd1) & (state_3 == 2'd3));
end

always @ (*) begin
    ap_predicate_op54_read_state1 = ((tmp_i_nbreadreq_fu_94_p3 == 1'd1) & (state_3 == 2'd0));
end

always @ (*) begin
    ap_predicate_op63_write_state2 = ((tmp_157_i_reg_213 == 1'd1) & (state_3_load_reg_209 == 2'd2));
end

always @ (*) begin
    ap_predicate_op65_write_state2 = ((tmp_i_256_reg_225 == 1'd1) & (state_3_load_reg_209 == 2'd1));
end

always @ (*) begin
    ap_predicate_op66_write_state2 = ((tmp_156_i_reg_237 == 1'd1) & (state_3_load_reg_209 == 2'd3));
end

always @ (*) begin
    ap_predicate_op67_write_state3 = ((tmp_157_i_reg_213_pp0_iter1_reg == 1'd1) & (state_3_load_reg_209_pp0_iter1_reg == 2'd2));
end

always @ (*) begin
    ap_predicate_op68_write_state3 = ((tmp_i_256_reg_225_pp0_iter1_reg == 1'd1) & (state_3_load_reg_209_pp0_iter1_reg == 2'd1));
end

always @ (*) begin
    ap_predicate_op69_write_state3 = ((tmp_156_i_reg_237_pp0_iter1_reg == 1'd1) & (state_3_load_reg_209_pp0_iter1_reg == 2'd3));
end

assign currWord_last_V_15_fu_133_p3 = rx_aethSift2mergerFifo_dout[128'd72];

assign currWord_last_V_16_fu_119_p3 = rx_rethSift2mergerFifo_dout[128'd72];

assign currWord_last_V_fu_151_p3 = rx_exhNoShiftFifo_dout[128'd72];

assign icmp_ln2048_1_fu_171_p2 = ((rx_pkgShiftTypeFifo_dout == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln2048_fu_165_p2 = ((rx_pkgShiftTypeFifo_dout == 32'd1) ? 1'b1 : 1'b0);

assign m_axis_mem_write_data_TVALID = regslice_both_m_axis_mem_write_data_U_vld_out;

assign or_ln2048_fu_185_p2 = (icmp_ln2048_fu_165_p2 | icmp_ln2048_1_fu_171_p2);

assign select_ln2048_1_fu_191_p3 = ((or_ln2048_fu_185_p2[0:0] == 1'b1) ? select_ln2048_fu_177_p3 : 2'd3);

assign select_ln2048_fu_177_p3 = ((icmp_ln2048_1_fu_171_p2[0:0] == 1'b1) ? 2'd1 : 2'd2);

assign tmp_156_i_nbreadreq_fu_80_p3 = rx_exhNoShiftFifo_empty_n;

assign tmp_157_i_nbreadreq_fu_52_p3 = rx_rethSift2mergerFifo_empty_n;

assign tmp_i_256_nbreadreq_fu_66_p3 = rx_aethSift2mergerFifo_empty_n;

assign tmp_i_nbreadreq_fu_94_p3 = rx_pkgShiftTypeFifo_empty_n;

assign trunc_ln2067_fu_141_p1 = rx_aethSift2mergerFifo_dout[72:0];

assign zext_ln2067_fu_205_p1 = trunc_ln2067_reg_232;

endmodule //rocev2_top_merge_rx_pkgs_64_s

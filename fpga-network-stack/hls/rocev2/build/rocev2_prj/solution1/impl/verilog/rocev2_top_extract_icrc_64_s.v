// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rocev2_top_extract_icrc_64_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        s_axis_rx_data_TVALID,
        rx_crc2ipFifo_din,
        rx_crc2ipFifo_num_data_valid,
        rx_crc2ipFifo_fifo_cap,
        rx_crc2ipFifo_full_n,
        rx_crc2ipFifo_write,
        s_axis_rx_data_TDATA,
        s_axis_rx_data_TREADY
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input   s_axis_rx_data_TVALID;
output  [127:0] rx_crc2ipFifo_din;
input  [1:0] rx_crc2ipFifo_num_data_valid;
input  [1:0] rx_crc2ipFifo_fifo_cap;
input   rx_crc2ipFifo_full_n;
output   rx_crc2ipFifo_write;
input  [127:0] s_axis_rx_data_TDATA;
output   s_axis_rx_data_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[127:0] rx_crc2ipFifo_din;
reg rx_crc2ipFifo_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [0:0] grp_nbreadreq_fu_68_p3;
reg    ap_predicate_op16_read_state1;
reg    ap_predicate_op38_read_state1;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [1:0] ei_state_load_reg_313;
reg   [0:0] tmp_i_265_reg_335;
reg    ap_predicate_op55_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg   [1:0] ei_state;
reg   [63:0] ei_prevWord_data_V;
reg   [7:0] ei_prevWord_keep_V;
reg   [0:0] ei_prevWord_last_V;
reg    s_axis_rx_data_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    rx_crc2ipFifo_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [63:0] ei_prevWord_data_V_load_reg_317;
reg   [7:0] ei_prevWord_keep_V_load_reg_323;
reg   [0:0] ei_prevWord_last_V_load_reg_329;
wire   [0:0] or_ln73_fu_201_p2;
wire   [0:0] grp_fu_157_p3;
reg   [0:0] ap_phi_mux_ei_prevWord_last_V_flag_2_i_phi_fu_92_p10;
wire   [0:0] ap_phi_reg_pp0_iter0_ei_prevWord_last_V_flag_2_i_reg_89;
reg   [0:0] ap_phi_mux_ei_prevWord_last_V_new_2_i_phi_fu_112_p10;
wire   [0:0] ap_phi_reg_pp0_iter0_ei_prevWord_last_V_new_2_i_reg_109;
wire   [0:0] ap_phi_reg_pp0_iter0_ei_prevWord_last_V_loc_1_i_reg_127;
reg   [0:0] ap_phi_reg_pp0_iter1_ei_prevWord_last_V_loc_1_i_reg_127;
wire   [7:0] ap_phi_reg_pp0_iter0_void_extract_icrc_64_hls_stream_net_axis_64_0_hls_stream_net_axis_64_0_ei_prevWord_reg_136;
reg   [7:0] ap_phi_reg_pp0_iter1_void_extract_icrc_64_hls_stream_net_axis_64_0_hls_stream_net_axis_64_0_ei_prevWord_reg_136;
wire   [0:0] icmp_ln93_fu_233_p2;
wire   [1:0] select_ln73_fu_207_p3;
wire   [1:0] select_ln61_fu_267_p3;
wire   [63:0] currWord_data_V_20_fu_183_p1;
wire   [63:0] currWord_data_V_fu_251_p1;
wire   [127:0] zext_ln87_fu_295_p1;
reg    ap_block_pp0_stage0_01001;
wire   [127:0] zext_ln160_fu_308_p1;
wire   [0:0] tmp_fu_187_p3;
wire   [0:0] p_Result_s_fu_195_p2;
wire   [72:0] tmp_267_i_fu_287_p4;
wire   [72:0] tmp_266_i_fu_300_p4;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_s_axis_rx_data_U_apdone_blk;
wire   [127:0] s_axis_rx_data_TDATA_int_regslice;
wire    s_axis_rx_data_TVALID_int_regslice;
reg    s_axis_rx_data_TREADY_int_regslice;
wire    regslice_both_s_axis_rx_data_U_ack_in;
reg    ap_condition_139;
reg    ap_condition_165;
reg    ap_condition_133;
reg    ap_condition_309;
reg    ap_condition_47;
reg    ap_condition_198;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ei_state = 2'd0;
#0 ei_prevWord_data_V = 64'd0;
#0 ei_prevWord_keep_V = 8'd0;
#0 ei_prevWord_last_V = 1'd0;
end

rocev2_top_regslice_both #(
    .DataWidth( 128 ))
regslice_both_s_axis_rx_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(s_axis_rx_data_TDATA),
    .vld_in(s_axis_rx_data_TVALID),
    .ack_in(regslice_both_s_axis_rx_data_U_ack_in),
    .data_out(s_axis_rx_data_TDATA_int_regslice),
    .vld_out(s_axis_rx_data_TVALID_int_regslice),
    .ack_out(s_axis_rx_data_TREADY_int_regslice),
    .apdone_blk(regslice_both_s_axis_rx_data_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_133)) begin
        if ((1'b1 == ap_condition_165)) begin
            ap_phi_reg_pp0_iter1_ei_prevWord_last_V_loc_1_i_reg_127 <= ei_prevWord_last_V;
        end else if ((1'b1 == ap_condition_139)) begin
            ap_phi_reg_pp0_iter1_ei_prevWord_last_V_loc_1_i_reg_127 <= or_ln73_fu_201_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_ei_prevWord_last_V_loc_1_i_reg_127 <= ap_phi_reg_pp0_iter0_ei_prevWord_last_V_loc_1_i_reg_127;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_133)) begin
        if (((ei_state == 2'd2) & (icmp_ln93_fu_233_p2 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_void_extract_icrc_64_hls_stream_net_axis_64_0_hls_stream_net_axis_64_0_ei_prevWord_reg_136 <= ei_prevWord_keep_V;
        end else if (((ei_state == 2'd2) & (icmp_ln93_fu_233_p2 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_void_extract_icrc_64_hls_stream_net_axis_64_0_hls_stream_net_axis_64_0_ei_prevWord_reg_136 <= 8'd15;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_void_extract_icrc_64_hls_stream_net_axis_64_0_hls_stream_net_axis_64_0_ei_prevWord_reg_136 <= ap_phi_reg_pp0_iter0_void_extract_icrc_64_hls_stream_net_axis_64_0_hls_stream_net_axis_64_0_ei_prevWord_reg_136;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_309)) begin
        if ((~(ei_state == 2'd2) & ~(ei_state == 2'd1))) begin
            ei_prevWord_data_V <= currWord_data_V_fu_251_p1;
        end else if ((ei_state == 2'd1)) begin
            ei_prevWord_data_V <= currWord_data_V_20_fu_183_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ei_state == 2'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln93_fu_233_p2 == 1'd1))) begin
        ei_prevWord_keep_V <= 8'd15;
    end else if (((~(ei_state == 2'd2) & ~(ei_state == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (grp_nbreadreq_fu_68_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (grp_nbreadreq_fu_68_p3 == 1'd1) & (ei_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ei_prevWord_keep_V <= {{s_axis_rx_data_TDATA_int_regslice[71:64]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_133)) begin
        if ((1'b1 == ap_condition_47)) begin
            ei_state <= select_ln61_fu_267_p3;
        end else if ((ei_state == 2'd2)) begin
            ei_state <= 2'd0;
        end else if ((1'b1 == ap_condition_139)) begin
            ei_state <= select_ln73_fu_207_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ei_prevWord_data_V_load_reg_317 <= ei_prevWord_data_V;
        ei_prevWord_keep_V_load_reg_323 <= ei_prevWord_keep_V;
        ei_prevWord_last_V_load_reg_329 <= ei_prevWord_last_V;
        ei_state_load_reg_313 <= ei_state;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_ei_prevWord_last_V_flag_2_i_phi_fu_92_p10 == 1'd1))) begin
        ei_prevWord_last_V <= ap_phi_mux_ei_prevWord_last_V_new_2_i_phi_fu_112_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ei_state == 2'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_i_265_reg_335 <= grp_nbreadreq_fu_68_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ei_state == 2'd2) | (~(ei_state == 2'd2) & ~(ei_state == 2'd1) & (grp_nbreadreq_fu_68_p3 == 1'd0)) | ((grp_nbreadreq_fu_68_p3 == 1'd0) & (ei_state == 2'd1)))) begin
        ap_phi_mux_ei_prevWord_last_V_flag_2_i_phi_fu_92_p10 = 1'd0;
    end else if (((~(ei_state == 2'd2) & ~(ei_state == 2'd1) & (grp_nbreadreq_fu_68_p3 == 1'd1)) | ((grp_nbreadreq_fu_68_p3 == 1'd1) & (ei_state == 2'd1)))) begin
        ap_phi_mux_ei_prevWord_last_V_flag_2_i_phi_fu_92_p10 = 1'd1;
    end else begin
        ap_phi_mux_ei_prevWord_last_V_flag_2_i_phi_fu_92_p10 = ap_phi_reg_pp0_iter0_ei_prevWord_last_V_flag_2_i_reg_89;
    end
end

always @ (*) begin
    if (((~(ei_state == 2'd2) & ~(ei_state == 2'd1) & (grp_nbreadreq_fu_68_p3 == 1'd1)) | ((grp_nbreadreq_fu_68_p3 == 1'd1) & (ei_state == 2'd1)))) begin
        ap_phi_mux_ei_prevWord_last_V_new_2_i_phi_fu_112_p10 = s_axis_rx_data_TDATA_int_regslice[128'd72];
    end else begin
        ap_phi_mux_ei_prevWord_last_V_new_2_i_phi_fu_112_p10 = ap_phi_reg_pp0_iter0_ei_prevWord_last_V_new_2_i_reg_109;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ei_state_load_reg_313 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op55_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        rx_crc2ipFifo_blk_n = rx_crc2ipFifo_full_n;
    end else begin
        rx_crc2ipFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_198)) begin
        if ((ei_state_load_reg_313 == 2'd2)) begin
            rx_crc2ipFifo_din = zext_ln160_fu_308_p1;
        end else if ((ap_predicate_op55_write_state2 == 1'b1)) begin
            rx_crc2ipFifo_din = zext_ln87_fu_295_p1;
        end else begin
            rx_crc2ipFifo_din = 'bx;
        end
    end else begin
        rx_crc2ipFifo_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ei_state_load_reg_313 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op55_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        rx_crc2ipFifo_write = 1'b1;
    end else begin
        rx_crc2ipFifo_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0) & (ap_predicate_op38_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0) & (ap_predicate_op16_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        s_axis_rx_data_TDATA_blk_n = s_axis_rx_data_TVALID_int_regslice;
    end else begin
        s_axis_rx_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op38_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op16_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        s_axis_rx_data_TREADY_int_regslice = 1'b1;
    end else begin
        s_axis_rx_data_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ei_state_load_reg_313 == 2'd2) & (rx_crc2ipFifo_full_n == 1'b0)) | ((ap_predicate_op55_write_state2 == 1'b1) & (rx_crc2ipFifo_full_n == 1'b0)))) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op38_read_state1 == 1'b1) & (s_axis_rx_data_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op16_read_state1 == 1'b1) & (s_axis_rx_data_TVALID_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ei_state_load_reg_313 == 2'd2) & (rx_crc2ipFifo_full_n == 1'b0)) | ((ap_predicate_op55_write_state2 == 1'b1) & (rx_crc2ipFifo_full_n == 1'b0)))) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op38_read_state1 == 1'b1) & (s_axis_rx_data_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op16_read_state1 == 1'b1) & (s_axis_rx_data_TVALID_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ei_state_load_reg_313 == 2'd2) & (rx_crc2ipFifo_full_n == 1'b0)) | ((ap_predicate_op55_write_state2 == 1'b1) & (rx_crc2ipFifo_full_n == 1'b0)))) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op38_read_state1 == 1'b1) & (s_axis_rx_data_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op16_read_state1 == 1'b1) & (s_axis_rx_data_TVALID_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | ((ap_predicate_op38_read_state1 == 1'b1) & (s_axis_rx_data_TVALID_int_regslice == 1'b0)) | ((ap_predicate_op16_read_state1 == 1'b1) & (s_axis_rx_data_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ei_state_load_reg_313 == 2'd2) & (rx_crc2ipFifo_full_n == 1'b0)) | ((ap_predicate_op55_write_state2 == 1'b1) & (rx_crc2ipFifo_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_133 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_139 = ((grp_nbreadreq_fu_68_p3 == 1'd1) & (ei_state == 2'd1) & (grp_fu_157_p3 == 1'd1));
end

always @ (*) begin
    ap_condition_165 = ((grp_nbreadreq_fu_68_p3 == 1'd1) & (ei_state == 2'd1) & (grp_fu_157_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_198 = ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_309 = ((1'b0 == ap_block_pp0_stage0_11001) & (grp_nbreadreq_fu_68_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_47 = (~(ei_state == 2'd2) & ~(ei_state == 2'd1) & (grp_nbreadreq_fu_68_p3 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_ei_prevWord_last_V_flag_2_i_reg_89 = 'bx;

assign ap_phi_reg_pp0_iter0_ei_prevWord_last_V_loc_1_i_reg_127 = 'bx;

assign ap_phi_reg_pp0_iter0_ei_prevWord_last_V_new_2_i_reg_109 = 'bx;

assign ap_phi_reg_pp0_iter0_void_extract_icrc_64_hls_stream_net_axis_64_0_hls_stream_net_axis_64_0_ei_prevWord_reg_136 = 'bx;

always @ (*) begin
    ap_predicate_op16_read_state1 = ((grp_nbreadreq_fu_68_p3 == 1'd1) & (ei_state == 2'd1));
end

always @ (*) begin
    ap_predicate_op38_read_state1 = (~(ei_state == 2'd2) & ~(ei_state == 2'd1) & (grp_nbreadreq_fu_68_p3 == 1'd1));
end

always @ (*) begin
    ap_predicate_op55_write_state2 = ((tmp_i_265_reg_335 == 1'd1) & (ei_state_load_reg_313 == 2'd1));
end

assign currWord_data_V_20_fu_183_p1 = s_axis_rx_data_TDATA_int_regslice[63:0];

assign currWord_data_V_fu_251_p1 = s_axis_rx_data_TDATA_int_regslice[63:0];

assign grp_fu_157_p3 = s_axis_rx_data_TDATA_int_regslice[128'd72];

assign grp_nbreadreq_fu_68_p3 = s_axis_rx_data_TVALID_int_regslice;

assign icmp_ln93_fu_233_p2 = ((ei_prevWord_keep_V == 8'd255) ? 1'b1 : 1'b0);

assign or_ln73_fu_201_p2 = (p_Result_s_fu_195_p2 | ei_prevWord_last_V);

assign p_Result_s_fu_195_p2 = (tmp_fu_187_p3 ^ 1'd1);

assign s_axis_rx_data_TREADY = regslice_both_s_axis_rx_data_U_ack_in;

assign select_ln61_fu_267_p3 = ((grp_fu_157_p3[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign select_ln73_fu_207_p3 = ((tmp_fu_187_p3[0:0] == 1'b1) ? 2'd2 : 2'd0);

assign tmp_266_i_fu_300_p4 = {{{ei_prevWord_last_V_load_reg_329}, {ap_phi_reg_pp0_iter1_void_extract_icrc_64_hls_stream_net_axis_64_0_hls_stream_net_axis_64_0_ei_prevWord_reg_136}}, {ei_prevWord_data_V_load_reg_317}};

assign tmp_267_i_fu_287_p4 = {{{ap_phi_reg_pp0_iter1_ei_prevWord_last_V_loc_1_i_reg_127}, {ei_prevWord_keep_V_load_reg_323}}, {ei_prevWord_data_V_load_reg_317}};

assign tmp_fu_187_p3 = s_axis_rx_data_TDATA_int_regslice[32'd68];

assign zext_ln160_fu_308_p1 = tmp_266_i_fu_300_p4;

assign zext_ln87_fu_295_p1 = tmp_267_i_fu_287_p4;

endmodule //rocev2_top_extract_icrc_64_s
